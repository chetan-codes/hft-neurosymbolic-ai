# HFT Neurosymbolic AI System - Platform Credentials Template
# Copy this file to credentials.env and fill in your actual credentials
# IMPORTANT: Never commit credentials.env to version control

# =============================================================================
# DATABASE CREDENTIALS
# =============================================================================

# PostgreSQL Database (for Hasura GraphQL Engine)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_postgres_password_here
POSTGRES_DB=postgres
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Hasura GraphQL Engine
HASURA_GRAPHQL_ADMIN_SECRET=your_hasura_admin_secret_here
HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:your_postgres_password_here@postgres:5432/postgres

# =============================================================================
# GRAPH DATABASE CREDENTIALS
# =============================================================================

# Neo4j Graph Database
NEO4J_USER=neo4j
NEO4J_PASSWORD=your_neo4j_password_here
NEO4J_HOST=neo4j
NEO4J_PORT=7687
NEO4J_HTTP_PORT=7474

# Dgraph Database
DGRAPH_USER=root
DGRAPH_PASSWORD=your_dgraph_password_here
DGRAPH_HOST=dgraph
DGRAPH_PORT=9080
DGRAPH_GRPC_PORT=9081

# Apache Jena Fuseki (SPARQL Endpoint)
JENA_USER=admin
JENA_PASSWORD=your_jena_password_here
JENA_HOST=jena
JENA_PORT=3030

# =============================================================================
# CACHING & SESSION MANAGEMENT
# =============================================================================

# Redis Cache
REDIS_PASSWORD=your_redis_password_here
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus Metrics
PROMETHEUS_USER=admin
PROMETHEUS_PASSWORD=your_prometheus_password_here
PROMETHEUS_HOST=prometheus
PROMETHEUS_PORT=9090

# Grafana Dashboards
GRAFANA_USER=admin
GRAFANA_PASSWORD=your_grafana_password_here
GRAFANA_HOST=grafana
GRAFANA_PORT=3000

# =============================================================================
# APPLICATION CREDENTIALS
# =============================================================================

# FastAPI Application
FASTAPI_SECRET_KEY=your_fastapi_secret_key_here
FASTAPI_DEBUG=False
FASTAPI_HOST=0.0.0.0
FASTAPI_PORT=8000

# Streamlit Dashboard
STREAMLIT_SECRET_KEY=your_streamlit_secret_key_here
STREAMLIT_HOST=0.0.0.0
STREAMLIT_PORT=8501

# =============================================================================
# EXTERNAL API CREDENTIALS (if needed)
# =============================================================================

# Yahoo Finance API (if using premium features)
YFINANCE_API_KEY=your_yahoo_finance_api_key_here

# CCXT Exchange APIs (if using real trading)
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_SECRET=your_binance_secret_here
COINBASE_API_KEY=your_coinbase_api_key_here
COINBASE_SECRET=your_coinbase_secret_here

# Alternative Data Providers
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key_here
QUANDL_API_KEY=your_quandl_key_here
POLYGON_API_KEY=your_polygon_key_here

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================

# JWT Token Secret
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Encryption Keys
ENCRYPTION_KEY=your_encryption_key_here
SALT_ROUNDS=12

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Test Database (separate from production)
TEST_POSTGRES_USER=test_user
TEST_POSTGRES_PASSWORD=your_test_postgres_password_here
TEST_POSTGRES_DB=test_hft_db

# Test Redis
TEST_REDIS_PASSWORD=your_test_redis_password_here

# =============================================================================
# DOCKER & CONTAINER CREDENTIALS
# =============================================================================

# Docker Registry (if using private registry)
DOCKER_REGISTRY_USER=your_docker_username
DOCKER_REGISTRY_PASSWORD=your_docker_password

# Container Network
DOCKER_NETWORK_NAME=hft_neurosymbolic_network

# =============================================================================
# LOGGING & AUDIT
# =============================================================================

# Log Aggregation (if using ELK stack)
ELASTICSEARCH_USER=elastic
ELASTICSEARCH_PASSWORD=your_elasticsearch_password_here
KIBANA_USER=kibana
KIBANA_PASSWORD=your_kibana_password_here

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Storage
BACKUP_S3_ACCESS_KEY=your_s3_access_key_here
BACKUP_S3_SECRET_KEY=your_s3_secret_key_here
BACKUP_S3_BUCKET=your_s3_bucket_name_here

# =============================================================================
# NOTIFICATION SERVICES
# =============================================================================

# Email Notifications
SMTP_USER=your_smtp_username
SMTP_PASSWORD=your_smtp_password
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587

# Slack Notifications
SLACK_BOT_TOKEN=your_slack_bot_token_here
SLACK_WEBHOOK_URL=your_slack_webhook_url_here

# Discord Notifications
DISCORD_BOT_TOKEN=your_discord_bot_token_here
DISCORD_WEBHOOK_URL=your_discord_webhook_url_here

# =============================================================================
# TRADING PLATFORM INTEGRATIONS
# =============================================================================

# Interactive Brokers (if using)
IB_USERNAME=your_ib_username
IB_PASSWORD=your_ib_password
IB_HOST=127.0.0.1
IB_PORT=7497

# TD Ameritrade (if using)
TD_AMERITRADE_CLIENT_ID=your_td_client_id
TD_AMERITRADE_REFRESH_TOKEN=your_td_refresh_token

# =============================================================================
# MACHINE LEARNING & AI SERVICES
# =============================================================================

# OpenAI API (if using GPT models)
OPENAI_API_KEY=your_openai_api_key_here

# Hugging Face (if using their models)
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# Weights & Biases (for experiment tracking)
WANDB_API_KEY=your_wandb_api_key_here

# MLflow (for model registry)
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_USERNAME=mlflow_user
MLFLOW_PASSWORD=your_mlflow_password_here

# =============================================================================
# CLOUD PROVIDERS (if deploying to cloud)
# =============================================================================

# AWS
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=us-east-1

# Google Cloud
GOOGLE_CLOUD_PROJECT_ID=your_gcp_project_id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# Azure
AZURE_CLIENT_ID=your_azure_client_id
AZURE_CLIENT_SECRET=your_azure_client_secret
AZURE_TENANT_ID=your_azure_tenant_id

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp credentials.env.template credentials.env
# 2. Edit credentials.env with your actual credentials
# 3. Use strong, unique passwords for each service
# 4. Consider using a password manager to generate secure passwords
# 5. Rotate passwords regularly (every 90 days recommended)
# 6. Use environment-specific credential files (dev.env, staging.env, prod.env)
# 7. Never commit credentials.env to version control
# 8. Use Docker secrets or Kubernetes secrets for containerized deployments
# 9. Consider using HashiCorp Vault for enterprise credential management
